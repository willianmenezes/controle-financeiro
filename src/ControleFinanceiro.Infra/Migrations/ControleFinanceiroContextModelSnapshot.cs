// <auto-generated />
using System;
using ControleFinanceiro.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControleFinanceiro.Infra.Migrations
{
    [DbContext(typeof(ControleFinanceiroContext))]
    partial class ControleFinanceiroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uuid")
                        .HasColumnName("CategoriaId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp")
                        .HasColumnName("Data");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("OrcamentoDiarioId")
                        .HasColumnType("uuid")
                        .HasColumnName("OrcamentoDiarioId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("OrcamentoDiarioId");

                    b.ToTable("Lancamentos", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.OrcamentoDiario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp")
                        .HasColumnName("Data");

                    b.Property<Guid>("OrcamentoMensalId")
                        .HasColumnType("uuid")
                        .HasColumnName("OrcamentoMensalId");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoMensalId");

                    b.ToTable("OrcamentosDiarios", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.OrcamentoMensal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("Ano");

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnName("Mes");

                    b.HasKey("Id");

                    b.ToTable("OrcamentosMensais", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.Termometro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("Cor");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorFinal");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorInicial");

                    b.HasKey("Id");

                    b.ToTable("Termometros", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.Lancamento", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Lancamentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Lancamentos_Categorias_CategoriaId");

                    b.HasOne("ControleFinanceiro.Domain.Entities.OrcamentoDiario", "OrcamentoDiario")
                        .WithMany("Lancamentos")
                        .HasForeignKey("OrcamentoDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Lancamentos_OrcamentosDiarios_OrcamentoDiarioId");

                    b.Navigation("Categoria");

                    b.Navigation("OrcamentoDiario");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.OrcamentoDiario", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Entities.OrcamentoMensal", "OrcamentoMensal")
                        .WithMany("OrcamentosDiarios")
                        .HasForeignKey("OrcamentoMensalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrcamentoDiario_OrcamentoMensal_OrcamentoMensalId");

                    b.Navigation("OrcamentoMensal");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.OrcamentoDiario", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.OrcamentoMensal", b =>
                {
                    b.Navigation("OrcamentosDiarios");
                });
#pragma warning restore 612, 618
        }
    }
}
